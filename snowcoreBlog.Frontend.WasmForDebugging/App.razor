@using snowcoreBlog.Frontend.SharedComponents.Features.Antiforgery

@inherits TimeWarpStateComponent

<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="[
        typeof(snowcoreBlog.Frontend.ClientShared.Extensions.ServiceCollectionExtensions).Assembly,
        typeof(snowcoreBlog.Frontend.ReadersManagement.Extensions.ServiceCollectionExtensions).Assembly,
        typeof(snowcoreBlog.Frontend.SharedComponents.Extensions.ServiceCollectionExtensions).Assembly,
    ]">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(ClientShared.Layout.DefaultBlogLayout)">
            <NotAuthorized>
                <FluentLabel>You're not authorized to view this content.</FluentLabel>
            </NotAuthorized>
            <Authorizing>
                <FluentLabel>Please wait, we are authorizing the user.</FluentLabel>
            </Authorizing>
        </AuthorizeRouteView>
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(ClientShared.Layout.DefaultBlogLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            using var antiforgery = GetState<AntiforgeryState>();
            await antiforgery.GetAndSetRequestVerificationToken();
        }
    }
}