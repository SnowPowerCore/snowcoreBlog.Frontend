@using SharedComponents.Features.Antiforgery

@inherits TimeWarpStateComponent

<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly" AdditionalAssemblies="[
            typeof(snowcoreBlog.Frontend.ReadersManagement.Extensions.ServiceCollectionExtensions).Assembly,
            typeof(snowcoreBlog.Frontend.SharedComponents.Extensions.ServiceCollectionExtensions).Assembly,
        ]">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.DefaultBlogLayout)">
                <NotAuthorized>
                    <FluentLabel>You're not authorized to view this content.</FluentLabel>
                </NotAuthorized>
                <Authorizing>
                    <FluentLabel>Please wait, we are authorizing the user.</FluentLabel>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(Layout.DefaultBlogLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            var antiforgery = GetState<AntiforgeryState>();
            await antiforgery.GetAndSetRequestVerificationToken();
        }
    }
}